# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-05-18 21:31
from __future__ import unicode_literals

import cleaning.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Economy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Namn')),
                ('description', models.TextField(blank=True, help_text='Kort beskrivning om allergenen, hur sprids den?\n                                   Vart finns den? Vilka besvär skapar den?', max_length=200, verbose_name='Beskrivning')),
            ],
            options={
                'verbose_name': 'allergen',
                'verbose_name_plural': 'allergener',
            },
        ),
        migrations.CreateModel(
            name='Clean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Datum')),
                ('measure', models.CharField(blank=True, help_text='Vilken åtgärd har tagits?', max_length=100, verbose_name='Åtgärd')),
                ('comment', models.TextField(blank=True, max_length=255, verbose_name='kommentar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cleaned', models.BooleanField(default=False, verbose_name='Städat?')),
            ],
            options={
                'verbose_name': 'Dokumentera städning',
                'verbose_name_plural': 'Dokumentera städning',
            },
        ),
        migrations.CreateModel(
            name='ControlPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Namn')),
                ('location', models.CharField(max_length=255, verbose_name='Plats')),
                ('short_description', models.TextField(max_length=255, verbose_name='Kort beskrivning')),
                ('active', models.BooleanField(default=True, verbose_name='Används den?')),
                ('routine_recurr', models.CharField(choices=[('yearly', 'Årligen'), ('monthly', 'Månadsvis'), ('weekly', 'Veckovis'), ('2week', '2 ggr/vecka'), ('3week', '3 ggr/vecka'), ('daily', 'Dagligen'), ('always', 'Vid varje tillfälle')], max_length=15, verbose_name='Hur ofta utförs rutinen?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Skapad')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Uppdaterad')),
            ],
            options={
                'ordering': ['-active', '-updated'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Datum')),
                ('measure', models.CharField(blank=True, help_text='Vilken åtgärd har tagits?', max_length=100, verbose_name='Åtgärd')),
                ('comment', models.TextField(blank=True, max_length=255, verbose_name='kommentar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('smell', models.BooleanField(default=True, verbose_name='Lukt ok?')),
                ('damaged', models.BooleanField(default=False, verbose_name='Förpackning ok?')),
                ('expired', models.BooleanField(default=False, verbose_name='Datum ok?')),
            ],
            options={
                'verbose_name': 'Dokumentera leverans',
                'ordering': ['date'],
                'verbose_name_plural': 'Dokumentera leveranser',
            },
        ),
        migrations.CreateModel(
            name='FacilityDamage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Datum')),
                ('measure', models.CharField(blank=True, help_text='Vilken åtgärd har tagits?', max_length=100, verbose_name='Åtgärd')),
                ('comment', models.TextField(blank=True, max_length=255, verbose_name='kommentar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('repaired', models.BooleanField(default=False, verbose_name='Reparerad?')),
                ('location', models.TextField(max_length=100, verbose_name='Plats')),
                ('description', models.TextField(max_length=500, verbose_name='Beskrivning')),
            ],
            options={
                'verbose_name': 'Dokumentera fastighetsskada',
                'verbose_name_plural': 'Dokumentera fastighetsskador',
            },
        ),
        migrations.CreateModel(
            name='Hazard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('type', models.CharField(choices=[('physical', 'Fysisk fara'), ('chemical', 'Kemisk fara'), ('microbio', 'Mikrobiologisk fara'), ('allergic', 'Allergen fara')], max_length=15)),
                ('how', models.CharField(choices=[('occurence', 'Förekomst'), ('application', 'Tillförsel'), ('growth', 'Tillväxt'), ('survival', 'Överlevnad')], max_length=15)),
                ('description', models.TextField(max_length=500)),
                ('routine_sufficient', models.BooleanField(default=True)),
                ('analysis', models.TextField(max_length=1000, verbose_name='faroanalys')),
            ],
            options={
                'verbose_name': 'Fara',
                'verbose_name_plural': 'Faror',
            },
        ),
        migrations.CreateModel(
            name='Ingredience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, help_text='Pris/kg eller pris/l', max_digits=6)),
                ('package_size', models.CharField(blank=True, help_text='storlek på paket, om standard. Ex. 25 kg säck', max_length=30)),
                ('allergen', models.ManyToManyField(to='cleaning.Allergen')),
            ],
            options={
                'verbose_name': 'ingrediens',
                'verbose_name_plural': 'ingredienser',
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='antal satser')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='datum')),
            ],
            options={
                'verbose_name': 'produktion',
                'ordering': ['date'],
                'verbose_name_plural': 'produktion',
            },
        ),
        migrations.CreateModel(
            name='Recepie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('pieces', models.IntegerField(help_text='Antal per sats')),
                ('customer_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('retailer_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('work_hours', models.DurationField(help_text='Arbetsinsats för en sats')),
                ('oven_time', models.DurationField(help_text='Tid i ugnen')),
                ('description', models.TextField(help_text='Hur gör man?', max_length=1000)),
                ('added', models.TimeField(auto_now_add=True)),
                ('updated', models.TimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'recept',
                'ordering': ['name'],
                'verbose_name_plural': 'recept',
            },
        ),
        migrations.CreateModel(
            name='RecepieIngredience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ingredience', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.Ingredience')),
                ('recepie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cleaning.Recepie')),
            ],
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=25)),
                ('purpose', models.TextField(max_length=150)),
                ('description', models.TextField(max_length=500)),
                ('monitoring', models.TextField(max_length=500)),
                ('anomaly_measure', models.TextField(max_length=150)),
                ('anomaly_correction', models.TextField(max_length=150)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'rutin',
                'ordering': ['name', '-updated'],
                'verbose_name_plural': 'rutiner',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contact', models.CharField(max_length=30, verbose_name='kontaktperson')),
                ('order_day', models.CharField(choices=[('monday', 'Måndag'), ('tuesday', 'Tisdag'), ('wednesday', 'Onsdag'), ('thursday', 'Torsdag'), ('friday', 'Fredag'), ('saturday', 'Lördag'), ('sunday', 'Söndag')], help_text='Veckodag för beställning', max_length=15)),
                ('description', models.TextField(blank=True, max_length=200)),
                ('goods', models.TextField(blank=True, max_length=100)),
                ('other', models.TextField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'leverantör',
                'verbose_name_plural': 'leverantörer',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Datum')),
                ('measure', models.CharField(blank=True, help_text='Vilken åtgärd har tagits?', max_length=100, verbose_name='Åtgärd')),
                ('comment', models.TextField(blank=True, max_length=255, verbose_name='kommentar')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('measured', models.IntegerField(verbose_name='Uppmätt temperatur')),
            ],
            options={
                'verbose_name': 'dokumentera temperatur',
                'ordering': ['date'],
                'verbose_name_plural': 'dokumentera temperaturer',
            },
        ),
        migrations.CreateModel(
            name='ColdStorage',
            fields=[
                ('controlpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cleaning.ControlPoint')),
                ('number', models.PositiveIntegerField(default=cleaning.models.auto_increment)),
                ('kind', models.CharField(choices=[('freeze', 'Frys'), ('fridge', 'kyl'), ('cool', 'sval')], max_length=15, verbose_name='Typ')),
                ('prescribedMaxTemp', models.IntegerField(verbose_name='Maxtemperatur')),
                ('prescribedMinTemp', models.IntegerField(verbose_name='Minimumtemperatur')),
            ],
            options={
                'verbose_name': 'kontrollpunk - Kylförvaring',
                'verbose_name_plural': 'kontrollpunkter - Kylförvaring',
            },
            bases=('cleaning.controlpoint',),
        ),
        migrations.CreateModel(
            name='CriticalControlPoint',
            fields=[
                ('controlpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cleaning.ControlPoint')),
                ('upper_limit', models.CharField(max_length=100, verbose_name='Övre gräns')),
                ('lower_limit', models.CharField(max_length=100, verbose_name='Nedre gräns')),
                ('extra_monitoring', models.TextField(max_length=500, verbose_name='Extra övervakning')),
            ],
            options={
                'verbose_name': 'kritisk kontrollpunkt',
                'verbose_name_plural': 'kritiska kontrollpunkter',
            },
            bases=('cleaning.controlpoint',),
        ),
        migrations.CreateModel(
            name='Preparation',
            fields=[
                ('controlpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cleaning.ControlPoint')),
            ],
            options={
                'verbose_name': 'kontrollpunk - Beredning',
                'verbose_name_plural': 'kontrollpunkter - Beredning',
            },
            bases=('cleaning.controlpoint',),
        ),
        migrations.CreateModel(
            name='Serving',
            fields=[
                ('controlpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cleaning.ControlPoint')),
            ],
            options={
                'verbose_name': 'kontrollpunkt - Servering',
                'verbose_name_plural': 'kontrollpunkter - Servering',
            },
            bases=('cleaning.controlpoint',),
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('controlpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cleaning.ControlPoint')),
            ],
            options={
                'verbose_name': 'kontrollpunkt - Lagring',
                'verbose_name_plural': 'kontrollpunkter - Lagring',
            },
            bases=('cleaning.controlpoint',),
        ),
        migrations.AddField(
            model_name='temperature',
            name='control_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.ControlPoint', verbose_name='Kontrollpunkt'),
        ),
        migrations.AddField(
            model_name='temperature',
            name='signature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Economy.Employee', verbose_name='signatur'),
        ),
        migrations.AddField(
            model_name='production',
            name='recepie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production', to='cleaning.Recepie', verbose_name='recept'),
        ),
        migrations.AddField(
            model_name='production',
            name='signature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee', to='Economy.Employee', verbose_name='signatur'),
        ),
        migrations.AddField(
            model_name='ingredience',
            name='supplier',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='cleaning.Supplier'),
        ),
        migrations.AddField(
            model_name='hazard',
            name='routine',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='cleaning.Routine'),
        ),
        migrations.AddField(
            model_name='facilitydamage',
            name='control_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.ControlPoint', verbose_name='Kontrollpunkt'),
        ),
        migrations.AddField(
            model_name='facilitydamage',
            name='signature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Economy.Employee', verbose_name='signatur'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='control_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.ControlPoint', verbose_name='Kontrollpunkt'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='signature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Economy.Employee', verbose_name='signatur'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cleaning.Supplier', verbose_name='Leverantör'),
        ),
        migrations.AddField(
            model_name='controlpoint',
            name='hazard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.Hazard', verbose_name='Fara'),
        ),
        migrations.AddField(
            model_name='controlpoint',
            name='routine',
            field=models.ManyToManyField(to='cleaning.Routine'),
        ),
        migrations.AddField(
            model_name='clean',
            name='control_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.ControlPoint', verbose_name='Kontrollpunkt'),
        ),
        migrations.AddField(
            model_name='clean',
            name='signature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Economy.Employee', verbose_name='signatur'),
        ),
        migrations.AddField(
            model_name='allergen',
            name='hazard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cleaning.Hazard', verbose_name='Fara'),
        ),
    ]
